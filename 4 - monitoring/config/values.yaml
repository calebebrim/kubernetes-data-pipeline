grafana:
  adminPassword: prom-operator
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-issuer
      kubernetes.io/ingress.class: nginx

    hosts:
      - grafana.brimdataservices.com.br
    path: "/"
    tls:
      - hosts:
        - grafana.brimdataservices.com.br
        secretName: grafana-metrics-secret
    
prometheus:
  prometheusSpec:
    podMonitorSelector:
      matchLabels:
        k8s-app: kafka-exporter
    # podMonitorNamespaceSelector:
    #   - monitoring
    additionalScrapeConfigs:
      - job_name: kubernetes-cadvisor
        honor_labels: true
        scrape_interval: 10s
        scrape_timeout: 10s
        metrics_path: /metrics/cadvisor
        scheme: https
        kubernetes_sd_configs:
        - role: node
          namespaces:
            names: []
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_node_label_(.+)
          replacement: $1
          action: labelmap
        - separator: ;
          regex: (.*)
          target_label: __address__
          replacement: kubernetes.default.svc:443
          action: replace
        - source_labels: [__meta_kubernetes_node_name]
          separator: ;
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
          action: replace
        - source_labels: [__meta_kubernetes_node_name]
          separator: ;
          regex: (.*)
          target_label: node_name
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_node_address_InternalIP]
          separator: ;
          regex: (.*)
          target_label: node_ip
          replacement: $1
          action: replace
        metric_relabel_configs:
        - source_labels: [container, __name__]
          separator: ;
          regex: POD;container_(network).*
          target_label: container
          replacement: $1
          action: replace
        - source_labels: [container]
          separator: ;
          regex: POD
          replacement: $1
          action: drop
        - source_labels: [container]
          separator: ;
          regex: ^$
          replacement: $1
          action: drop
        - source_labels: [__name__]
          separator: ;
          regex: container_(network_tcp_usage_total|tasks_state|memory_failures_total|network_udp_usage_total)
          replacement: $1
          action: drop
      - job_name: kubernetes-nodes-kubelet
        scrape_interval: 10s
        scrape_timeout: 10s
        scheme: https
        kubernetes_sd_configs:
        - role: node
          namespaces:
            names: []
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
          
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - role: service
        relabel_configs:

        # annotation 'prometheus.io/scrape' must be set to 'true'
        - action: keep
          regex: true
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]

        # service cannot be in kube-system or prom namespaces
        - action: drop
          regex: (kube-system|prom)
          source_labels: [__meta_kubernetes_namespace]

        # service port name must end with word 'metrics'
        - action: keep
          regex: .*metrics
          source_labels: [__meta_kubernetes_service_port_name]

        # allow override of http scheme
        - action: replace
          regex: (https?)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          target_label: __scheme__

        # allow override of default /metrics path
        - action: replace
          regex: (.+)
          source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          target_label: __metrics_path__

        # allow override of default port
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          target_label: __address__
        - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
        - action: replace
          source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - action: replace
          source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_name